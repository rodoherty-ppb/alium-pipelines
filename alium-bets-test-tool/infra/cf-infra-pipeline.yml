AWSTemplateFormatVersion: "2010-09-09"

Description: CD CodePipeline for Alium Bets Test Tool 

Parameters:

  SourceRepoUrl:
    Type: String
    Description: URL of the source code repository

  GitHubAuthToken:
    Type: String
    Default: '{{resolve:secretsmanager:alium/CodePipelinePOC/GitHubSecret:SecretString:FlutterGlobalCodePipelinePOCGitHubSecret}}'
    
  GitHubOwner:
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubRepo:
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubBranch:
    Type: String
    Default: master
    AllowedPattern: "[A-Za-z0-9-]+"

  PipelineBucket:
    Description: Name of the S3 bucket that codepipeline will create to store source and build artifacts
    Type: String

  BuildArtifactsBucket:
    Description: Name of the S3 bucket in which codepipline will store a zip containing the built artifacts
    Type: String

  BuildArtifactsS3Key:
    Default: buildArtifacts.zip
    Description: Name of the S3 key of the zipped build artifact
    Type: String


# Metadata:
#  AWS::CloudFormation::Interface:
#    ParameterGroups:
#      - Label:
#          default: "CodePipeline Settings"
#        Parameters:
#          - 
#          - 

Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref PipelineBucket
        Type: S3
 
      DisableInboundStageTransitions: []
      Name: !Sub ${AWS::StackName}-Pipeline
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: GitHubSource
          Actions:
          - Name: GitHubSourceAction
            InputArtifacts: []
            ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Version: 1
              Provider: GitHub
            OutputArtifacts:
            - Name: SourceCode
            Configuration:
              Owner: !Ref GitHubOwner
              Repo: !Ref GitHubRepo
              Branch: !Ref GitHubBranch
              PollForSourceChanges: false
              OAuthToken: !Ref GitHubAuthToken
        - Name: DeployAliumBets
          Actions:
          - Name: DeployToECSAction
            InputArtifacts:
            - Name: SourceCode
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation 
              Version: '1'
            Configuration:
              ActionMode: CREATE_UPDATE
              StackName: rodoherty-alium-ecs-task-def-stack
              Capabilities: CAPABILITY_IAM
              RoleArn: !Ref CloudFormationRole
              TemplatePath: 'SourceCode::AliumBetsTestToolTaskDefinition.yml'
              ParameterOverrides:
                - ServiceName: 'AliumBetsTestTool'
                - ContainerName: 'alium-bets-test-tool-container'
                - ContainerSecurityGroup: sg-0f8319e82c365140a    # Where is this created?  Actually, it should perhaps be created AliumBetsTestToolTaskDefinition.yml which means it shouldn't be a parameter at all.

  AppPipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Name: !Sub ${AWS::StackName}-AppPipelineWebhook
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration: 
        SecretToken: !Ref GitHubAuthToken
      Filters:
        - 
          JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref Pipeline
      TargetAction: GitHubSourceAction
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true


  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

#  CFNRole:
#    Type: AWS::IAM::Role
#    Properties:
#      AssumeRolePolicyDocument:
#        Statement:
#        - Action: ['sts:AssumeRole']
#          Effect: Allow
#          Principal:
#            Service: [cloudformation.amazonaws.com]
#        Version: '2012-10-17'
#      Path: /
#      Policies:
#        - PolicyName: CloudFormationRole
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              - Action:
#                  - 'ec2:*'
#                Effect: Allow
#                Resource: '*'

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                - 'codebuild:*'
                - 'ecs:*'
                Effect: Allow
                Resource: '*'



